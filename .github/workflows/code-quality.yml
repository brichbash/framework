name: Qodana
on:
  workflow_dispatch:
  pull_request:
  push:


jobs:
  qodana:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis-phpredis/phpredis@5.3.7, igbinary, msgpack, lzf, zstd, lz4, memcached, gmp
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: xdebug
        env:
          REDIS_CONFIGURE_OPTS: --enable-redis --enable-redis-igbinary --enable-redis-msgpack --enable-redis-lzf --with-liblzf --enable-redis-zstd --with-libzstd --enable-redis-lz4 --with-liblz4
          REDIS_LIBS: liblz4-dev, liblzf-dev, libzstd-dev
      - name: Set Minimum PHP 8.1 Versions
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer require symfony/css-selector:^6.0 --no-interaction --no-update
      - name: Install dependencies
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress
#       - name: Migrate phpunit.xml
#         run: ./vendor/bin/phpunit --migrate-configuration
      - name: Run coverage
        run: ./vendor/bin/phpunit --coverage-xml=coverage --stop-on-error --stop-on-warning
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_USERNAME: root
          DYNAMODB_CACHE_TABLE: laravel_dynamodb_test
          DYNAMODB_ENDPOINT: "http://localhost:8888"
          AWS_ACCESS_KEY_ID: random_key
          AWS_SECRET_ACCESS_KEY: random_secret
      - uses: docker/login-action@v2
        if: ${{ always() }} 
        with:
          registry: registry.jetbrains.team
          username: ${{ secrets.SPACE_REGISTRY_USERNAME }}
          password: ${{ secrets.SPACE_REGISTRY_PASSWORD }}
      - name: 'Qodana Scan'
        if: ${{ always() }}
        uses: JetBrains/qodana-action@main
